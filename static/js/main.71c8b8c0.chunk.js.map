{"version":3,"sources":["animations/fadeForecast.module.css","components/Layout/Layout.styles.js","components/Layout/Layout.js","components/Loader/Loader.js","components/SearchForm/SearchForm.styles.js","components/SearchForm/SearchForm.js","components/Notification/Notification.styles.js","components/Notification/Notification.js","components/MainWeatherInfo/MainWeatherInfo.styles.js","components/MainWeatherInfo/MainWeatherInfo.js","components/AdditWeatherInfo/AdditWeatherInfo.styles.js","components/AdditWeatherInfo/AdditWeatherInfo.js","components/WeatherDetails/WeatherDetails.styles.js","components/WeatherDetails/WeatherDetails.js","components/WeatherItem/WeatherItem.styles.js","components/WeatherItem/WeatherItem.js","components/WeatherList/WeatherList.styles.js","components/WeatherList/WeatherList.js","components/WeatherCategory/WeatherCategory.styles.js","components/WeatherCategory/WeatherCategory.js","services/weatherAPI.js","components/WeatherForecasts/WeatherForecasts.styles.js","components/WeatherForecasts/WeatherForecasts.js","services/controller.js","components/App/App.js","index.js"],"names":["module","exports","StyledMain","styled","main","Layout","children","override","css","Loader","isLoading","size","color","margin","loading","StyledForm","form","StyledDiv","div","StyledButton","button","StyledSpan","span","StyledInput","input","customStyles","container","provided","state","width","border","control","background","borderColor","boxShadow","borderRadius","borderTopRightRadius","borderBottomRightRadius","placeholder","menu","option","backgroundColor","singleValue","SearchForm","onSubmit","useState","value","setValue","countryCode","setCountryCode","e","preventDefault","alert","type","required","autoComplete","onChange","target","handleChangeText","styles","options","countriesCode","code","defaultValue","label","StyledP","p","Notification","message","StyledTitleP","StyledSubtitleP","StyledTempP","StyledImg","img","MainWeatherInfo","cityName","weatherIcon","feelsTemp","temperature","country","find","src","process","icon","alt","StyledUL","ul","StyledLI","li","StyledTitle","StyledValue","library","add","fas","AdditWeatherInfo","data","rh","precip","wind_cdir","wind_spd","uv","StyledSection","section","WeatherDetails","weatherData","city_name","country_code","temp","weather","app_temp","additionalInfo","StyledDayP","StyledDescP","WeatherItem","valid_date","day","split","reverse","join","description","WeatherList","TransitionGroup","component","map","item","idx","CSSTransition","key","timeout","classNames","fadeForecast","ts","WeatherCategory","onGetForecast","onClick","axios","defaults","baseURL","params","query","fetchCurrentWeatherByQuery","get","this","then","response","catch","error","Error","fetchForecastWeather","WeatherForecasts","setError","forecast","setForecast","console","log","weatherAPI","status","statusText","getForecastWeather","App","setWeather","setLoading","searchQuery","setSearchQuery","useEffect","finally","getCurrentWeather","setSearchParams","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71c8b8c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fadeForecast_enter__130f8\",\"enterActive\":\"fadeForecast_enterActive__1lmr7\",\"exit\":\"fadeForecast_exit__14jf9\",\"exitActive\":\"fadeForecast_exitActive__1dl4b\"};","import styled from 'styled-components';\n\nexport const StyledMain = styled.main`\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex: 1 0 auto;\n`;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//Styles\nimport { StyledMain } from './Layout.styles';\n\nconst Layout = ({ children }) => <StyledMain>{children}</StyledMain>;\n\nLayout.propTypes = {\n\tchildren: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//Components\nimport PulseLoader from 'react-spinners/PulseLoader';\n//Styles\nimport { css } from '@emotion/core';\n\nconst override = css`\n\tdisplay: block;\n\tmargin: 16% auto;\n\ttext-align: center;\n`;\n\nconst Loader = ({ isLoading }) => (\n\t<PulseLoader css={override} size={30} color={'#fff'} margin={2} loading={isLoading} />\n);\n\nLoader.propTypes = {\n\tisLoading: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n\tdisplay: flex;\n\talign-items: stretch;\n\twidth: 100%;\n\tmax-width: 40%;\n\tpadding: 0 50px;\n\tmargin: 0 auto 3rem;\n`;\n\nexport const StyledDiv = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n`;\n\nexport const StyledButton = styled.button`\n\tdisplay: inline-block;\n\twidth: 48px;\n\theight: 38px;\n\tborder: 0;\n\tbackground-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n\tbackground-size: 50%;\n\tbackground-repeat: no-repeat;\n\tbackground-position: center;\n\topacity: 0.6;\n\tborder-top-left-radius: 50px;\n\tborder-bottom-left-radius: 50px;\n\ttransition: opacity 250ms linear;\n\tcursor: pointer;\n\toutline: none;\n\tbackground-color: rgba(0, 0, 0, 0.3);\n\n\t&:hover {\n\t\topacity: 0.9;\n\t}\n`;\n\nexport const StyledSpan = styled.span`\n\tposition: absolute;\n\twidth: 1px;\n\theight: 1px;\n\tpadding: 0;\n\toverflow: hidden;\n\tclip: rect(0, 0, 0, 0);\n\twhite-space: nowrap;\n\tclip-path: inset(50%);\n\tborder: 0;\n`;\n\nexport const StyledInput = styled.input`\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n\tfont: inherit;\n\tfont-size: 20px;\n\tline-height: 24px;\n\tborder: none;\n\toutline: none;\n\tpadding-left: 4px;\n\tpadding-right: 4px;\n\tcolor: #fff;\n\tbackground: rgba(0, 0, 0, 0.2);\n\n\t&::placeholder {\n\t\tfont: inherit;\n\t\tfont-size: 16px;\n\t\tcolor: rgba(255, 255, 255, 0.7);\n\t}\n\n\t&::-webkit-input-placeholder {\n\t\topacity: 1;\n\t\ttransition: opacity 0.3s ease;\n\t}\n\n\t&::-moz-placeholder {\n\t\topacity: 1;\n\t\ttransition: opacity 0.3s ease;\n\t}\n\n\t&:-moz-placeholder {\n\t\topacity: 1;\n\t\ttransition: opacity 0.3s ease;\n\t}\n\n\t&:-ms-input-placeholder {\n\t\topacity: 1;\n\t\ttransition: opacity 0.3s ease;\n\t}\n\n\t&:focus::-webkit-input-placeholder {\n\t\topacity: 0;\n\t\ttransition: opacity 0.3s ease;\n\t}\n\n\t&:focus::-moz-placeholder {\n\t\topacity: 0;\n\t\ttransition: opacity 0.3s ease;\n\t}\n\n\t&:focus:-moz-placeholder {\n\t\topacity: 0;\n\t\ttransition: opacity 0.3s ease;\n\t}\n\n\t&:focus:-ms-input-placeholder {\n\t\topacity: 0;\n\t\ttransition: opacity 0.3s ease;\n\t}\n`;\n\nexport const customStyles = {\n\tcontainer: (provided, state) => ({\n\t\t...provided,\n\t\twidth: 300,\n\t\tborder: 'none',\n\t}),\n\n\tcontrol: (provided, state) => ({\n\t\t...provided,\n\t\tbackground: 'rgba(0,0,0,0.2)',\n\t\tborderColor: 'none',\n\t\tborder: 'none',\n\t\tboxShadow: 'none',\n\t\tborderRadius: 'none',\n\t\tborderTopRightRadius: 50,\n\t\tborderBottomRightRadius: 50,\n\t}),\n\n\tplaceholder: (provided, state) => ({\n\t\t...provided,\n\t\tcolor: '#D3DAD1',\n\t}),\n\n\tmenu: (provided, state) => ({\n\t\t...provided,\n\t\tbackground: 'rgba(0,0,0,0.2)',\n\t\tcolor: '#FFF',\n\t}),\n\n\toption: (provided, state) => ({\n\t\t...provided,\n\t\tbackgroundColor: 'rgba(0,0,0,0.2)',\n\n\t\t':active': {\n\t\t\tbackgroundColor: 'rgba(0,0,0,0.4)',\n\t\t\tcolor: '#fff',\n\t\t},\n\n\t\t':hover': {\n\t\t\tbackgroundColor: 'rgba(0,0,0,0.5)',\n\t\t\tcolor: '#fff',\n\t\t},\n\t}),\n\n\tsingleValue: (provided, state) => ({\n\t\t...provided,\n\t\tcolor: '#fff',\n\t}),\n};\n","//Core\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from 'react-select';\n//Data\nimport countriesCode from 'data/countriesCode.json';\n//Styles\nimport { StyledForm, StyledDiv, StyledButton, StyledSpan, StyledInput } from './SearchForm.styles';\nimport { customStyles } from './SearchForm.styles';\n\nconst SearchForm = ({ onSubmit }) => {\n\tconst [value, setValue] = useState('');\n\tconst [countryCode, setCountryCode] = useState('');\n\n\tconst handleChangeText = ({ target: { value } }) => setValue(value);\n\n\tconst handleChangeSelect = ({ code }) => setCountryCode(code);\n\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\n\t\tif (!value || value === ' ') return alert('Enter location or zip');\n\n\t\tonSubmit(value, countryCode);\n\t\tsetCountryCode('');\n\t\tsetValue('');\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<StyledForm onSubmit={handleSubmit}>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<StyledButton type=\"submit\">\n\t\t\t\t\t\t<StyledSpan>Search</StyledSpan>\n\t\t\t\t\t</StyledButton>\n\n\t\t\t\t\t<StyledInput\n\t\t\t\t\t\trequired\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tplaceholder=\"Search location, zip...\"\n\t\t\t\t\t\tonChange={value => handleChangeText(value)}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Select\n\t\t\t\t\t\tstyles={customStyles}\n\t\t\t\t\t\toptions={countriesCode}\n\t\t\t\t\t\tonChange={handleChangeSelect}\n\t\t\t\t\t\tdefaultValue={countriesCode[0].label}\n\t\t\t\t\t/>\n\t\t\t\t</StyledDiv>\n\t\t\t</StyledForm>\n\t\t</>\n\t);\n};\n\nSearchForm.propTypes = {\n\tonSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","//Core\nimport styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n\tdisplay: block;\n\twidth: 50%;\n\tmargin: 12% auto 0;\n\tpadding: 20px 10px;\n\ttext-align: center;\n\tbox-shadow: 0 0 18px 0.2px rgba(0, 0, 0, 0.6), 0 0 18px 0.2px rgba(255, 255, 255, 0.3);\n\tborder-radius: 50px;\n\tbackground: rgba(0, 0, 0, 0.2);\n\tcolor: #fff;\n`;\n\nexport const StyledP = styled.p`\n\ttext-transform: uppercase;\n\tfont-size: 18px;\n\tline-height: 22px;\n\tfont-weight: 400;\n`;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//Styles\nimport { StyledDiv, StyledP } from './Notification.styles';\n\nconst Notification = ({ message }) => (\n\t<StyledDiv>\n\t\t{`${message}` === 'Failed to fetch' ? (\n\t\t\t<>\n\t\t\t\t<StyledP>Sorry!</StyledP>\n\t\t\t\t<StyledP>\n\t\t\t\t\tCheck your internet connection and try again. We couldn't connect to the server.\n\t\t\t\t</StyledP>\n\t\t\t</>\n\t\t) : (\n\t\t\t<StyledP>{message}</StyledP>\n\t\t)}\n\t</StyledDiv>\n);\n\nNotification.propTypes = {\n\tmessage: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","//Core\nimport styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n\tflex: 0 0 20%;\n\tcolor: #fff;\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledTitleP = styled.p`\n\tfont-size: 1.8rem;\n\tmargin-top: 0.5rem;\n`;\n\nexport const StyledSubtitleP = styled.p`\n\tfont-size: 1.3rem;\n\tmargin-bottom: 0.5rem;\n`;\n\nexport const StyledTempP = styled.p`\n\tfont-size: 3rem;\n\tline-height: 3rem;\n\tfont-weight: 700;\n`;\n\nexport const StyledImg = styled.img`\n\tdisplay: block;\n\twidth: 150px;\n\theight: 150px;\n`;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport countriesCode from 'data/countriesCode.json';\n//Styles\nimport {\n\tStyledDiv,\n\tStyledImg,\n\tStyledTitleP,\n\tStyledTempP,\n\tStyledSubtitleP,\n} from './MainWeatherInfo.styles';\n\nconst MainWeatherInfo = ({ cityName, countryCode, weatherIcon, feelsTemp, temperature }) => {\n\tconst { label: country } = countriesCode.find(({ code }) => code === countryCode);\n\n\treturn (\n\t\t<StyledDiv>\n\t\t\t<StyledImg src={`${process.env.PUBLIC_URL}/icons/${weatherIcon.icon}.png`} alt=\"img\" />\n\t\t\t<StyledTitleP>{cityName}</StyledTitleP>\n\t\t\t<StyledSubtitleP>{country}</StyledSubtitleP>\n\t\t\t<StyledTempP>{temperature} &#176;C</StyledTempP>\n\t\t\t<StyledSubtitleP>Feels like {feelsTemp} &#176;C</StyledSubtitleP>\n\t\t</StyledDiv>\n\t);\n};\n\nMainWeatherInfo.propTypes = {\n\tcityName: PropTypes.string.isRequired,\n\tfeelsTemp: PropTypes.number.isRequired,\n\tcountryCode: PropTypes.string.isRequired,\n\ttemperature: PropTypes.number.isRequired,\n\tweatherIcon: PropTypes.shape({\n\t\ticon: PropTypes.string.isRequired,\n\t\tcode: PropTypes.number.isRequired,\n\t\tdescription: PropTypes.string.isRequired,\n\t}).isRequired,\n};\n\nexport default MainWeatherInfo;\n","//Core\nimport styled from 'styled-components';\n\nexport const StyledUL = styled.ul`\n\tflex: 0 0 20%;\n\tlist-style: none;\n`;\n\nexport const StyledLI = styled.li`\n\tcolor: #fff;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\talign-items: flex-start;\n\n\t&:not(:last-child) {\n\t\tmargin-bottom: 1.5rem;\n\t}\n`;\n\nexport const StyledDiv = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\n\t&:first-child {\n\t\tflex: 0 0 20%;\n\t\tmargin-right: 10px;\n\t\tflex-direction: row;\n\t\talign-items: flex-start;\n\t}\n`;\n\nexport const StyledTitle = styled.p`\n\tfont-size: 14px;\n\tline-height: 22px;\n\tfont-weight: 400;\n\tdisplay: block;\n\twidth: 100%;\n`;\n\nexport const StyledValue = styled.p`\n\tfont-size: 20px;\n\tline-height: 24px;\n\tfont-weight: 700;\n\tdisplay: block;\n\twidth: 100%;\n`;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\n//Styles\nimport { StyledUL, StyledLI, StyledDiv, StyledTitle, StyledValue } from './AdditWeatherInfo.styles';\n\nlibrary.add(fas);\n\nconst AdditWeatherInfo = ({ data }) => {\n\tconst { rh, precip, wind_cdir, wind_spd, uv } = data;\n\n\treturn (\n\t\t<StyledUL>\n\t\t\t<StyledLI>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<FontAwesomeIcon icon=\"water\" size=\"2x\" />\n\t\t\t\t</StyledDiv>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<StyledTitle>Humidity</StyledTitle>\n\t\t\t\t\t<StyledValue>{rh} %</StyledValue>\n\t\t\t\t</StyledDiv>\n\t\t\t</StyledLI>\n\n\t\t\t<StyledLI>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<FontAwesomeIcon icon=\"tint\" size=\"2x\" />\n\t\t\t\t\t<FontAwesomeIcon icon=\"tint\" size=\"1x\" />\n\t\t\t\t</StyledDiv>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<StyledTitle>Precipitation</StyledTitle>\n\t\t\t\t\t<StyledValue>{precip} mm</StyledValue>\n\t\t\t\t</StyledDiv>\n\t\t\t</StyledLI>\n\n\t\t\t<StyledLI>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<FontAwesomeIcon icon=\"wind\" size=\"2x\" />\n\t\t\t\t</StyledDiv>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<StyledTitle>Wind Speed</StyledTitle>\n\t\t\t\t\t<StyledValue>\n\t\t\t\t\t\t{wind_cdir} {wind_spd} m/s\n\t\t\t\t\t</StyledValue>\n\t\t\t\t</StyledDiv>\n\t\t\t</StyledLI>\n\n\t\t\t<StyledLI>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<FontAwesomeIcon icon=\"sun\" size=\"2x\" />\n\t\t\t\t</StyledDiv>\n\t\t\t\t<StyledDiv>\n\t\t\t\t\t<StyledTitle>UV Index</StyledTitle>\n\t\t\t\t\t<StyledValue>{uv}</StyledValue>\n\t\t\t\t</StyledDiv>\n\t\t\t</StyledLI>\n\t\t</StyledUL>\n\t);\n};\n\nAdditWeatherInfo.propTypes = {\n\tdata: PropTypes.shape({\n\t\trh: PropTypes.number.isRequired,\n\t\tuv: PropTypes.number.isRequired,\n\t\tprecip: PropTypes.number.isRequired,\n\t\twind_spd: PropTypes.number.isRequired,\n\t\twind_cdir: PropTypes.string.isRequired,\n\t}).isRequired,\n};\n\nexport default AdditWeatherInfo;\n","//Core\nimport styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: flex-start;\n\theight: 60%;\n`;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//Components\nimport MainWeatherInfo from '../MainWeatherInfo';\nimport AdditWeatherInfo from '../AdditWeatherInfo';\n//Styles\nimport { StyledSection } from './WeatherDetails.styles';\n\nconst WeatherDetails = ({ weatherData }) => {\n\tconst { city_name, country_code, temp, weather, app_temp, ...additionalInfo } = weatherData;\n\n\treturn (\n\t\t<StyledSection>\n\t\t\t<MainWeatherInfo\n\t\t\t\ttemperature={temp}\n\t\t\t\tfeelsTemp={app_temp}\n\t\t\t\tcityName={city_name}\n\t\t\t\tweatherIcon={weather}\n\t\t\t\tcountryCode={country_code}\n\t\t\t/>\n\n\t\t\t<AdditWeatherInfo data={additionalInfo} />\n\t\t</StyledSection>\n\t);\n};\n\nWeatherDetails.propTypes = {\n\tweatherData: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default WeatherDetails;\n","//Core\nimport styled from 'styled-components';\n\nexport const StyledLI = styled.li`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tcolor: #fff;\n`;\n\nexport const StyledDayP = styled.p`\n\tfont-size: 16px;\n`;\n\nexport const StyledTempP = styled.p`\n\tfont-size: 20px;\n\tfont-weight: 700;\n`;\n\nexport const StyledDescP = styled.p`\n\tfont-size: 14px;\n`;\n\nexport const StyledImg = styled.img`\n\tdisplay: block;\n\twidth: 80px;\n\theight: 80px;\n`;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//Styles\nimport { StyledLI, StyledDayP, StyledTempP, StyledDescP, StyledImg } from './WeatherItem.styles';\n\nconst WeatherItem = ({ additionalInfo }) => {\n\tconst { valid_date, weather, temp } = additionalInfo;\n\n\tconst day = valid_date.split('-').reverse().join('-');\n\n\treturn (\n\t\t<StyledLI>\n\t\t\t<StyledDayP>{day}</StyledDayP>\n\t\t\t<StyledImg src={`${process.env.PUBLIC_URL}/icons/${weather.icon}.png`} alt=\"img\" />\n\t\t\t<StyledTempP>{temp} &#176;C</StyledTempP>\n\t\t\t<StyledDescP>{weather.description}</StyledDescP>\n\t\t</StyledLI>\n\t);\n};\n\nWeatherItem.propTypes = {\n\tadditionalInfo: PropTypes.shape({\n\t\ttemp: PropTypes.number.isRequired,\n\t\tvalid_date: PropTypes.string.isRequired,\n\t\tweather: PropTypes.shape({\n\t\t\ticon: PropTypes.string.isRequired,\n\t\t\tdescription: PropTypes.string.isRequired,\n\t\t}).isRequired,\n\t}).isRequired,\n};\n\nexport default WeatherItem;\n","//Core\nimport styled from 'styled-components';\n\nexport const StyledUL = styled.ul`\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\tlist-style: none;\n\twidth: 100%;\n\tmargin-top: 1.2rem;\n`;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n//Components\nimport WeatherItem from '../WeatherItem';\n//Styles\nimport { StyledUL } from './WeatherList.styles';\nimport fadeForecast from 'animations/fadeForecast.module.css';\n\nconst WeatherList = ({ weatherData }) => (\n\t<TransitionGroup component={StyledUL}>\n\t\t{weatherData.map(\n\t\t\t(item, idx) =>\n\t\t\t\tidx < 7 && (\n\t\t\t\t\t<CSSTransition key={item.valid_date} timeout={250} classNames={fadeForecast}>\n\t\t\t\t\t\t<WeatherItem key={item.ts} additionalInfo={item} />\n\t\t\t\t\t</CSSTransition>\n\t\t\t\t),\n\t\t)}\n\t</TransitionGroup>\n);\n\nWeatherList.propTypes = {\n\tweatherData: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.any)).isRequired,\n};\n\nexport default WeatherList;\n","//Core\nimport styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tmargin-left: 2rem;\n`;\n\nexport const StyledButton = styled.button`\n\tdisplay: block;\n\tbackground-color: #fff;\n\toutline: none;\n\tborder: none;\n\tpadding: 6px 4px;\n\tcolor: #000;\n\tcursor: pointer;\n\tborder-radius: 4px;\n\ttransition-property: all;\n\ttransition-duration: 0.25s;\n\ttransition-timing-function: linear;\n\n\t&:hover {\n\t\tfilter: drop-shadow(0 0 1rem #000);\n\t}\n`;\n","//Core\nimport React from 'react';\nimport PropTypes from 'prop-types';\n//Styles\nimport { StyledDiv, StyledButton } from './WeatherCategory.styles';\n\nconst WeatherCategory = ({ onGetForecast }) => (\n\t<StyledDiv>\n\t\t<StyledButton onClick={onGetForecast}>Daily forecast</StyledButton>\n\t</StyledDiv>\n);\n\nWeatherCategory.propTypes = {\n\tonGetForecast: PropTypes.func.isRequired,\n};\n\nexport default WeatherCategory;\n","//Core\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.weatherbit.io/v2.0/';\nconst params = { key: 'b8222148b5494f7cbc5d57b76e5c3cc3' };\n\nexport default {\n\tquery: '',\n\n\tcode: '',\n\n\tfetchCurrentWeatherByQuery() {\n\t\treturn axios\n\t\t\t.get(`current?city=${this.query},${this.code}`, { params })\n\t\t\t.then(response => response)\n\t\t\t.catch(error => {\n\t\t\t\tthrow Error(error);\n\t\t\t});\n\t},\n\n\tfetchForecastWeather() {\n\t\treturn axios\n\t\t\t.get(`forecast/daily?city=${this.query},${this.code}`, { params })\n\t\t\t.then(response => response)\n\t\t\t.catch(error => {\n\t\t\t\tthrow Error(error);\n\t\t\t});\n\t},\n\n\t/**\n\t * @param {string} query\n\t */\n\tset searchQuery(query) {\n\t\tthis.query = query;\n\t},\n\n\t/**\n\t * @param {string} code\n\t */\n\tset countryCode(code) {\n\t\tthis.code = code;\n\t},\n};\n","//Core\nimport styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n\talign-items: flex-start;\n\theight: 40%;\n`;\n","//Core\nimport React, { useState } from 'react';\n//Components\nimport WeatherList from '../WeatherList';\nimport Notification from '../Notification';\nimport WeatherCategory from '../WeatherCategory';\n//Services\nimport { getForecastWeather } from 'services';\n//Styles\nimport { StyledSection } from './WeatherForecasts.styles';\n\nconst WeatherForecasts = () => {\n\tconst [error, setError] = useState(null);\n\tconst [forecast, setForecast] = useState(null);\n\n\tconst getWeather = () => getForecastWeather(setForecast, setError);\n\n\treturn (\n\t\t<StyledSection>\n\t\t\t<WeatherCategory onGetForecast={getWeather} />\n\n\t\t\t{error && <Notification message={error.message || error} />}\n\n\t\t\t{!error && forecast && <WeatherList weatherData={forecast} />}\n\t\t</StyledSection>\n\t);\n};\n\nexport default WeatherForecasts;\n","//API\nimport weatherAPI from './weatherAPI';\n\nexport const setSearchParams = (query, countryCode) => {\n\tweatherAPI.searchQuery = query;\n\tweatherAPI.code = countryCode;\n};\n\nexport const getCurrentWeather = (setWeather, setError, setLoading) => {\n\tsetLoading(true);\n\n\tweatherAPI\n\t\t.fetchCurrentWeatherByQuery()\n\t\t.then(({ status, data, statusText }) =>\n\t\t\tstatus === 200 ? setWeather(...data.data) : setError(statusText),\n\t\t)\n\t\t.catch(error => setError(error))\n\t\t.finally(() => setLoading(false));\n};\n\nexport const getForecastWeather = (setForecast, setError) => {\n\tconsole.log('object');\n\tweatherAPI\n\t\t.fetchForecastWeather()\n\t\t.then(({ status, data, statusText }) =>\n\t\t\tstatus === 200 ? setForecast(data.data) : setError(statusText),\n\t\t)\n\t\t.catch(error => setError(error));\n};\n","//Core\nimport React, { useState, useEffect } from 'react';\n//Components\nimport Layout from '../Layout';\nimport Loader from '../Loader';\nimport SearchForm from '../SearchForm';\nimport Notification from '../Notification';\nimport WeatherDetails from '../WeatherDetails';\nimport WeatherForecasts from '../WeatherForecasts';\n//Services\nimport { getCurrentWeather, setSearchParams } from 'services';\n\nconst App = () => {\n\tconst [error, setError] = useState(null);\n\tconst [weather, setWeather] = useState(null);\n\tconst [loading, setLoading] = useState(false);\n\tconst [searchQuery, setSearchQuery] = useState('');\n\n\tuseEffect(() => {\n\t\tif (!searchQuery) return;\n\n\t\tgetCurrentWeather(setWeather, setError, setLoading);\n\t}, [searchQuery]);\n\n\tconst handleFormSubmit = (query, countryCode) => {\n\t\tsetSearchParams(query, countryCode);\n\n\t\tsetSearchQuery(query);\n\t\tsetWeather(null);\n\t\tsetError(null);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<SearchForm onSubmit={handleFormSubmit} />\n\n\t\t\t<Layout>\n\t\t\t\t{loading && <Loader isLoading={loading} />}\n\n\t\t\t\t{error && <Notification message={error.message || error} />}\n\n\t\t\t\t{!loading && weather && <WeatherDetails weatherData={weather} />}\n\n\t\t\t\t{!loading && weather && <WeatherForecasts />}\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\n\nexport default App;\n","//Core\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n//Components\nimport App from 'components/App';\n//Styles\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}